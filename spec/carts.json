{
  "openapi": "3.0.0",
  "info": {
    "version": "",
    "title": "Omnisend API (Carts)",
    "description": ""
  },
  "paths": {
    "/carts/{cartID}": {
      "parameters": [
        {
          "name": "cartID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "GET_carts-cartID",
        "summary": "Get cart",
        "tags": ["Carts"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "contactID": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/cart-model-full"
                    }
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "contactID": "56565FRT1446466sd66",
                      "cartID": "4557116516",
                      "email": "dr.evil@example.com",
                      "phone": "+12025550142",
                      "createdAt": "2017-06-20T15:40:12Z",
                      "updatedAt": "2017-06-20T15:45:12Z",
                      "currency": "USD",
                      "cartSum": 66666,
                      "cartRecoveryUrl": "http://www.example.com/carts/?retoreCart=4557116516",
                      "products": [
                        {
                          "cartProductID": "1",
                          "productID": "prod666",
                          "variantID": "prod666",
                          "title": "Container for mojo",
                          "description": "",
                          "quantity": 1,
                          "price": 66666,
                          "oldPrice": 69666,
                          "discount": 0,
                          "imageUrl": "http://www.example.com/images/products/prod-666.png",
                          "productUrl": "http://www.example.com/products/prod-666"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      },
      "put": {
        "operationId": "PUT_carts-cartID",
        "summary": "Replace existing cart",
        "tags": ["Carts"],
        "description": "Replace (update) existing cart. All stored cart data will be overwriten with request data.\nThis method used to replace cart with all its products - use it if you are posting full cart data.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/cart-model"
                  }
                ],
                "example": {
                  "createdAt": "2017-06-20T15:40:12Z",
                  "updatedAt": "2017-06-20T15:45:12Z",
                  "currency": "USD",
                  "cartSum": 78777,
                  "cartRecoveryUrl": "http://www.example.com/carts/?retoreCart=4557116516",
                  "products": [
                    {
                      "cartProductID": "1",
                      "productID": "prod666",
                      "variantID": "prod666",
                      "title": "Container for mojo",
                      "description": "",
                      "quantity": 1,
                      "price": 66666,
                      "oldPrice": 69666,
                      "discount": 0,
                      "imageUrl": "http://www.example.com/images/products/prod-666.png",
                      "productUrl": "http://www.example.com/products/prod-666"
                    },
                    {
                      "cartProductID": "2",
                      "productID": "prod999",
                      "variantID": "prod999",
                      "title": "Nitrous oxide",
                      "description": "",
                      "quantity": 10,
                      "price": 12111,
                      "oldPrice": 14311,
                      "discount": 0,
                      "imageUrl": "http://www.example.com/images/products/prod-999.png",
                      "productUrl": "http://www.example.com/products/prod-999"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cartID": {
                      "type": "string"
                    }
                  },
                  "required": ["cartID"]
                },
                "examples": {
                  "response": {
                    "value": {
                      "cartID": "4557116516"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      },
      "patch": {
        "operationId": "PATCH_carts-cartID",
        "summary": "Update cart",
        "tags": ["Carts"],
        "description": "Update cart. Use to update cart info - add products or update existing in cart products.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "description": "ISO currency code"
                  },
                  "cartSum": {
                    "type": "integer",
                    "description": "In cents, without commas, etc. For example for 1.25 USD - 125"
                  },
                  "cartRecoveryUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cartProductID": {
                          "type": "string",
                          "description": "Product identificator in cart"
                        },
                        "productID": {
                          "type": "string"
                        },
                        "variantID": {
                          "type": "string",
                          "description": "Product modification identificator"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "Only whole number.",
                          "minimum": 1
                        },
                        "price": {
                          "type": "integer",
                          "description": "Final price in cents (with discount, wit taxes, etc.), without commas, etc. For example for 1.25 USD - 125. ",
                          "minimum": 0
                        },
                        "oldPrice": {
                          "type": "integer",
                          "description": "In cents, without commas, etc. For example for 1.25 USD - 125",
                          "minimum": 0
                        },
                        "discount": {
                          "type": "integer",
                          "description": "Discount sum in cents."
                        },
                        "imageUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "Link to product image"
                        },
                        "productUrl": {
                          "type": "string",
                          "description": "Link to product page",
                          "format": "uri"
                        }
                      },
                      "required": ["cartProductID"]
                    }
                  }
                },
                "required": ["currency", "cartSum"],
                "example": {
                  "currency": "USD",
                  "cartSum": 78777,
                  "cartRecoveryUrl": "http://www.example.com/carts/?retoreCart=4557116516",
                  "products": [
                    {
                      "cartProductID": "1",
                      "productID": "prod666",
                      "variantID": "prod666",
                      "title": "Container for mojo",
                      "description": "",
                      "quantity": 1,
                      "price": 66666,
                      "oldPrice": 69666,
                      "discount": 0,
                      "imageUrl": "http://www.example.com/images/products/prod-666.png",
                      "productUrl": "http://www.example.com/products/prod-666"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cartID": {
                      "type": "string"
                    }
                  },
                  "required": ["cartID"]
                },
                "examples": {
                  "response": {
                    "value": {
                      "cartID": "4557116516"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      },
      "delete": {
        "operationId": "DELETE_carts-cartID",
        "summary": "Delete cart",
        "tags": ["Carts"],
        "description": "Delete cart.\n\n**Curl example:**\n```php\ncurl -X DELETE \"https://api.omnisend.com/v3/carts/47841398\" \n```",
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/carts": {
      "get": {
        "operationId": "GET_carts",
        "summary": "List carts",
        "tags": ["Carts"],
        "description": "**Sorting:**\n\n| **Parameter** | **Sort order** | **Description** |\r\n| --- | ---| --- |\r\n| createdAt | DESC | sort by cart creation date - newest first |\r\n| updatedAt | DESC | sort by cart update date - newest first |\r\n| cartSum | DESC | sort by cart total sum - biggest on top |",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "segmentID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Cart creation date from. Format: YYYY-MM-DD",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Cart creation date to. Format: YYYY-MM-DD",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of results to skip. Default is 0.",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to fetch. Default is 100, max 250.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 250,
              "default": 100
            }
          },
          {
            "name": "updatedFrom",
            "in": "query",
            "description": "Cart update date from. Format: YYYY-MM-DD",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "updatedTo",
            "in": "query",
            "description": "Cart update date from. Format: YYYY-MM-DD",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "carts": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "contactID": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "$ref": "#/components/schemas/cart-model-full"
                          }
                        ]
                      }
                    },
                    "paging": {
                      "$ref": "#/components/schemas/paging-link"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "carts": [
                        {
                          "contactID": "56565FRT1446466sd66",
                          "cartID": "4557116516",
                          "email": "dr.evil@example.com",
                          "phone": "+12025550142",
                          "createdAt": "2017-06-20T15:40:12Z",
                          "updatedAt": "2017-06-20T15:45:12Z",
                          "currency": "USD",
                          "cartSum": 66666,
                          "cartRecoveryUrl": "http://www.example.com/carts/",
                          "products": [
                            {
                              "cartProductID": "1",
                              "productID": "prod666",
                              "variantID": "prod666",
                              "title": "Container for mojo",
                              "description": "",
                              "quantity": 1,
                              "price": 66666,
                              "oldPrice": 69666,
                              "discount": 0,
                              "imageUrl": "http://www.example.com/images/products/prod-666.png",
                              "productUrl": "http://www.example.com/products/prod-666"
                            }
                          ]
                        },
                        {
                          "contactID": "79enkpRa3GzzNRgOtvkjNvYbxwf",
                          "cartID": "6987d47s4a",
                          "email": "austin.powers@example.com",
                          "createdAt": "2017-05-20T15:40:12Z",
                          "updatedAt": "2017-05-20T15:45:12Z",
                          "currency": "USD",
                          "cartSum": 99999,
                          "cartRecoveryUrl": "http://www.example.com/abandoned-carts/",
                          "products": [
                            {
                              "cartProductID": "1",
                              "productID": "45687",
                              "variantID": "6987",
                              "title": "Contact lens videocamera",
                              "description": "",
                              "quantity": 1,
                              "price": 99999,
                              "oldPrice": 0,
                              "discount": 0,
                              "imageUrl": "http://www.example.com/uploads/prod/lens-camera-986.png",
                              "productUrl": "http://www.example.com/cameras/contact-lense"
                            }
                          ]
                        }
                      ],
                      "paging": {
                        "previous": null,
                        "next": "https://api.omnisend.com/v3/carts/?offset=2&limit=2",
                        "offset": 0,
                        "limit": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      },
      "post": {
        "operationId": "POST_carts",
        "summary": "Create new cart",
        "tags": ["Carts"],
        "description": "While posting new cart `email` or/and `contactID` must be provided.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cart-model-full"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cartID": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  },
                  "required": ["cartID", "email"]
                },
                "examples": {
                  "response": {
                    "value": {
                      "cartID": "4557116516",
                      "email": "dr.evil@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/carts/{cartID}/products": {
      "parameters": [
        {
          "name": "cartID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "operationId": "POST_carts-cartID-products",
        "summary": "Add product to cart",
        "tags": ["Carts"],
        "description": "Add product to cart.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "description": "ISO currency code"
                  },
                  "cartProductID": {
                    "type": "string",
                    "description": "Product identificator in cart"
                  },
                  "productID": {
                    "type": "string"
                  },
                  "variantID": {
                    "type": "string",
                    "description": "Product modification identificator"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Only whole number.",
                    "minimum": 1
                  },
                  "price": {
                    "type": "integer",
                    "description": "In cents, without commas, etc. For example for 1.25 USD - 125",
                    "minimum": 0
                  },
                  "oldPrice": {
                    "type": "integer",
                    "description": "In cents, without commas, etc. For example for 1.25 USD - 125",
                    "minimum": 0
                  },
                  "discount": {
                    "type": "integer",
                    "description": "Discount sum in cents."
                  },
                  "imageUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Link to product image"
                  },
                  "productUrl": {
                    "type": "string",
                    "description": "Link to product page",
                    "format": "uri"
                  }
                },
                "required": [
                  "currency",
                  "cartProductID",
                  "productID",
                  "variantID",
                  "title",
                  "quantity",
                  "price"
                ],
                "example": {
                  "currency": "USD",
                  "cartProductID": "2",
                  "productID": "prod999",
                  "variantID": "prod999",
                  "title": "Nitrous oxide",
                  "description": "",
                  "quantity": 10,
                  "price": 12111,
                  "oldPrice": 14311,
                  "discount": 0,
                  "imageUrl": "http://www.example.com/images/products/prod-999.png",
                  "productUrl": "http://www.example.com/products/prod-999"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cartID": {
                      "type": "string"
                    },
                    "cartProductID": {
                      "type": "string"
                    },
                    "productID": {
                      "type": "string"
                    },
                    "variantID": {
                      "type": "string"
                    }
                  },
                  "required": ["cartID", "cartProductID", "productID", "variantID"]
                },
                "examples": {
                  "response": {
                    "value": {
                      "cartID": "4557116516",
                      "cartProductID": "4557116516-1",
                      "prodID": "prod666",
                      "variantID": "prod666"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    },
    "/carts/{cartID}/products/{cartProductID}": {
      "parameters": [
        {
          "name": "cartID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "cartProductID",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "operationId": "PUT_carts-cartID-products-cartProductID",
        "summary": "Replace product",
        "tags": ["Carts"],
        "description": "Replace existing product (change quantity, price or whole product)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "description": "ISO currency code"
                  },
                  "productID": {
                    "type": "string"
                  },
                  "variantID": {
                    "type": "string",
                    "description": "Product modification identificator"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Only whole number.",
                    "minimum": 1
                  },
                  "price": {
                    "type": "integer",
                    "description": "In cents, without commas, etc. For example for 1.25 USD - 125",
                    "minimum": 0
                  },
                  "oldPrice": {
                    "type": "integer",
                    "description": "In cents, without commas, etc. For example for 1.25 USD - 125",
                    "minimum": 0
                  },
                  "discount": {
                    "type": "integer",
                    "description": "Discount sum in cents."
                  },
                  "imageUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Link to product image"
                  },
                  "productUrl": {
                    "type": "string",
                    "description": "Link to product page",
                    "format": "uri"
                  }
                },
                "required": [
                  "currency",
                  "productID",
                  "variantID",
                  "title",
                  "quantity",
                  "price"
                ],
                "example": {
                  "currency": "USD",
                  "cartProductID": "2",
                  "productID": "prod999",
                  "variantID": "prod999",
                  "title": "Nitrous oxide",
                  "description": "",
                  "quantity": 10,
                  "price": 12111,
                  "oldPrice": 14311,
                  "discount": 0,
                  "imageUrl": "http://www.example.com/images/products/prod-999.png",
                  "productUrl": "http://www.example.com/products/prod-999"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cartID": {
                      "type": "string"
                    },
                    "cartProductID": {
                      "type": "string"
                    },
                    "productID": {
                      "type": "string"
                    },
                    "variantID": {
                      "type": "string"
                    }
                  },
                  "required": ["cartID", "cartProductID", "productID", "variantID"]
                },
                "examples": {
                  "response": {
                    "value": {
                      "cartID": "4557116516",
                      "cartProductID": "4557116516-1",
                      "prodID": "prod666",
                      "variantID": "prod666"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      },
      "patch": {
        "operationId": "PATCH_carts-cartID-products-cartProductID",
        "summary": "Update product",
        "tags": ["Carts"],
        "description": "Update product in cart - change quantity, price, etc. Pass only fields, you want to update.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "description": "ISO currency code"
                  },
                  "productID": {
                    "type": "string"
                  },
                  "variantID": {
                    "type": "string",
                    "description": "Product modification identificator"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Only whole number.",
                    "minimum": 1
                  },
                  "price": {
                    "type": "integer",
                    "description": "In cents, without commas, etc. For example for 1.25 USD - 125",
                    "minimum": 0
                  },
                  "oldPrice": {
                    "type": "integer",
                    "description": "In cents, without commas, etc. For example for 1.25 USD - 125",
                    "minimum": 0
                  },
                  "discount": {
                    "type": "integer",
                    "description": "Discount sum in cents."
                  },
                  "imageUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Link to product image"
                  },
                  "productUrl": {
                    "type": "string",
                    "description": "Link to product page",
                    "format": "uri"
                  }
                },
                "example": {
                  "currency": "USD",
                  "cartProductID": "2",
                  "productID": "prod999",
                  "variantID": "prod999",
                  "title": "Nitrous oxide",
                  "description": "",
                  "quantity": 10,
                  "price": 12111,
                  "oldPrice": 14311,
                  "discount": 0,
                  "imageUrl": "http://www.example.com/images/products/prod-999.png",
                  "productUrl": "http://www.example.com/products/prod-999"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cartID": {
                      "type": "string"
                    },
                    "cartProductID": {
                      "type": "string"
                    },
                    "productID": {
                      "type": "string"
                    },
                    "variantID": {
                      "type": "string"
                    }
                  },
                  "required": ["cartID", "cartProductID", "productID", "variantID"]
                },
                "examples": {
                  "response": {
                    "value": {
                      "cartID": "4557116516",
                      "cartProductID": "4557116516-1",
                      "prodID": "prod666",
                      "variantID": "prod666"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      },
      "delete": {
        "operationId": "DELETE_carts-cartID-products-cartProductID",
        "summary": "Remove product from cart",
        "tags": ["Carts"],
        "description": "Remove product from cart.\n\n**Curl example:**\n```php\ncurl -X DELETE \"https://api.omnisend.com/v3/carts/47841398/products/prod478541\" \n```",
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "$ref": "#/components/responses/trait-errorStatusCodes-400"
          },
          "401": {
            "$ref": "#/components/responses/trait-errorStatusCodes-401"
          },
          "403": {
            "$ref": "#/components/responses/trait-errorStatusCodes-403"
          },
          "404": {
            "$ref": "#/components/responses/trait-errorStatusCodes-404"
          },
          "408": {
            "$ref": "#/components/responses/trait-errorStatusCodes-408"
          },
          "422": {
            "$ref": "#/components/responses/trait-errorStatusCodes-422"
          },
          "429": {
            "$ref": "#/components/responses/trait-errorStatusCodes-429"
          }
        },
        "security": [
          {
            "X-API-KEY": []
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.omnisend.com/v3"
    }
  ],
  "components": {
    "parameters": {
      "trait_paging_offset": {
        "name": "offset",
        "in": "query",
        "description": "Number of results to skip. Default is 0.",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        }
      },
      "trait_paging_limit": {
        "name": "limit",
        "in": "query",
        "description": "Number of results to fetch. Default is 100, max 250.",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 250,
          "default": 100
        }
      }
    },
    "responses": {
      "trait-errorStatusCodes-400": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "default": "Bad Request - invalid parameters, fields or filters"
                }
              }
            }
          }
        }
      },
      "trait-errorStatusCodes-401": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "default": "Unauthorized - authorization error (invalid basic auth data or API key)"
                }
              }
            }
          }
        }
      },
      "trait-errorStatusCodes-403": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "default": "Forbidden – The server understood the request, but is refusing it (blocked due to many errors in particular time) or the access is not allowed."
                }
              }
            }
          }
        }
      },
      "trait-errorStatusCodes-404": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "default": " Not found – There is no resource behind the URI."
                }
              }
            }
          }
        }
      },
      "trait-errorStatusCodes-408": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "default": "Request timeout"
                }
              }
            }
          }
        }
      },
      "trait-errorStatusCodes-422": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "default": "Unprocessable Entity – used if the server cannot process the enitity, e.g. mandatory fields are missing in the payload.",
                  "description": ""
                }
              }
            }
          }
        }
      },
      "trait-errorStatusCodes-429": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "default": " to many requests (rate limit) - current "
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "X-API-KEY": {
        "name": "X-API-KEY",
        "type": "apiKey",
        "in": "header"
      }
    },
    "schemas": {
      "contacts-input": {
        "title": "Contacts Input",
        "type": "object",
        "properties": {
          "identifiers": {
            "$ref": "#/components/schemas/identifier-input"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "description": "Tags are labels you create to organize and manage your audience. When creating a new contact we strongly advice to add source tag, i.e. \"source: shopify\"",
            "items": {
              "type": "string"
            }
          },
          "country": {
            "type": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "ISO Country code. You can find all country codes in Guides part.",
            "minLength": 2,
            "maxLength": 2
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "description": "Street, house number, apartment"
          },
          "postalCode": {
            "type": "string",
            "description": "Contact's postal or zip code."
          },
          "gender": {
            "type": "string",
            "enum": ["m", "f"],
            "minLength": 1,
            "maxLength": 1,
            "description": "m - male, f- female"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "Format: YYYY-MM-DD. Example: 1981-11-05"
          },
          "customProperties": {
            "type": "object",
            "description": "You can add your own custom properties. Read more in https://api-docs.omnisend.com/reference/contacts#custom-properties",
            "properties": {
              "name1": {
                "type": "string"
              },
              "name2": {
                "type": "number"
              },
              "name3": {
                "type": "integer"
              },
              "name4": {
                "type": "boolean"
              },
              "name5": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": ["identifiers"],
        "example": {
          "status": "ut sed consequat in",
          "statusDate": "3179-01-31T22:48:45.912Z",
          "sendWelcomeEmail": false,
          "customFields": {
            "key1": "laboris eiusmod",
            "key2": "elit velit irure aute"
          },
          "country": "amet dolor dolore magna",
          "lastName": "eu proident est elit",
          "postCode": "voluptate sed consectetur laborum anim",
          "gender": "m",
          "address": "adipisicing irure",
          "countryCode": "lab"
        }
      },
      "contacts-output": {
        "title": "Contacts Output",
        "type": "object",
        "properties": {
          "contactID": {
            "type": "string"
          },
          "identifiers": {
            "$ref": "#/components/schemas/identifier-output"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Contacts creation date (example: 2017-05-30T14:11:12Z)"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "consents": {
            "type": "array",
            "description": "Legal contact consents information",
            "items": {
              "$ref": "#/components/schemas/consent-model"
            }
          },
          "tags": {
            "type": "array",
            "description": "",
            "items": {
              "type": "string"
            }
          },
          "country": {
            "type": "string"
          },
          "countryCode": {
            "type": "string",
            "description": "ISO Country code (2 characters). You can find all country codes in Guides part.",
            "minLength": 2,
            "maxLength": 2
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "description": "Street, house number,  apartment"
          },
          "postalCode": {
            "type": "string",
            "description": "Contact's postal or zip code."
          },
          "gender": {
            "type": "string",
            "enum": ["m", "f"],
            "minLength": 1,
            "maxLength": 1,
            "description": "m - male, f- female"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "Example: 1981-11-05"
          },
          "customProperties": {
            "type": "object",
            "description": "",
            "properties": {
              "name1": {
                "type": "string"
              },
              "name2": {
                "type": "number"
              },
              "name3": {
                "type": "integer"
              },
              "name4": {
                "type": "boolean"
              },
              "name5": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "status": "id sunt minim dolore",
          "statusDate": "3687-04-30T09:13:41.570Z",
          "sendWelcomeEmail": true,
          "customFields": {
            "key1": "nulla",
            "key2": "Lorem reprehenderit"
          },
          "sent": -27965585,
          "opened": 89056999,
          "clicked": -19897697,
          "optInDate": "3847-12-04T12:54:35.117Z",
          "doubleOptInDate": "3116-04-01T22:36:35.361Z",
          "phone": "id",
          "address": "nostrud off",
          "email": "x55ZgsTtOIhk@ASGEoqSRF.jq",
          "state": "aliqua sint veniam ipsum occaecat",
          "lastName": "occaecat non commodo in",
          "country": "dolore nisi amet",
          "contactID": "Hiy6oqPq@aBebUorUQXRAQgbMLO.agqf"
        }
      },
      "identifier-input": {
        "title": "Identifier Input",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Email or phone value"
            },
            "type": {
              "type": "string",
              "description": "Possible values: email, phone",
              "enum": ["email", "phone"]
            },
            "consent": {
              "$ref": "#/components/schemas/consent-model"
            },
            "channels": {
              "type": "object",
              "properties": {
                "sms": {
                  "type": "object",
                  "description": "Required, for type 'phone'",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Channel status",
                      "default": "subscribed",
                      "enum": ["subscribed", "unsubscribed", "nonSubscribed"]
                    },
                    "statusDate": {
                      "type": "string",
                      "description": "If not provided current time will be used as default"
                    }
                  }
                },
                "email": {
                  "type": "object",
                  "description": "Required, for type 'email'",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "subscribed",
                      "enum": ["subscribed", "unsubscribed", "nonSubscribed"]
                    },
                    "statusDate": {
                      "type": "string",
                      "description": "If not provided current time will be used as default"
                    }
                  }
                }
              }
            }
          },
          "required": ["id", "type", "channels"]
        }
      },
      "identifier-output": {
        "title": "Identifier Output",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "channels": {
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": {
                  "type": "object",
                  "required": ["status", "statusDate"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Email channel status"
                    },
                    "statusDate": {
                      "type": "string"
                    }
                  }
                },
                "sms": {
                  "type": "object",
                  "required": ["status", "statusDate"],
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "SMS channel status"
                    },
                    "statusDate": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": ["id", "type", "channels"]
        }
      },
      "paging-link": {
        "title": "Paging Link",
        "type": "object",
        "properties": {
          "previous": {
            "type": "string",
            "description": "Link to previous page results",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "description": "Link to next page results",
            "format": "uri"
          },
          "offset": {
            "type": "integer",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "default": 100,
            "minimum": 1,
            "maximum": 250,
            "description": "Default - 100. Max - 250."
          }
        }
      },
      "orders-full": {
        "title": "Orders Full",
        "allOf": [
          {
            "$ref": "#/components/schemas/orders"
          },
          {
            "type": "object",
            "properties": {
              "billingAddress": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "ISO country code",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "state": {
                    "type": "string"
                  },
                  "stateCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Contact's postal or zip code."
                  }
                }
              },
              "shippingAddress": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "ISO country code",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "state": {
                    "type": "string"
                  },
                  "stateCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Contact's postal or zip code."
                  }
                }
              },
              "products": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productID": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "variantID": {
                      "type": "string",
                      "description": "Product variant identificator"
                    },
                    "variantTitle": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "vendor": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "Only whole number.",
                      "minimum": 1
                    },
                    "price": {
                      "type": "integer",
                      "description": "Final price in cents (with discount, wit taxes, etc.), without commas, etc. For example for 1.25 USD - 125. ",
                      "minimum": 0
                    },
                    "discount": {
                      "type": "integer",
                      "description": "Discount sum in cents."
                    },
                    "weight": {
                      "type": "integer"
                    },
                    "imageUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to product image"
                    },
                    "productUrl": {
                      "type": "string",
                      "description": "Link to product page",
                      "format": "uri"
                    },
                    "categoryIDs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": ["productID", "variantID", "title", "quantity", "price"]
                }
              }
            }
          }
        ]
      },
      "orders-output": {
        "title": "Orders Output",
        "allOf": [
          {
            "properties": {
              "orderID": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "phone": {
                "type": "string"
              },
              "contactID": {
                "type": "string"
              }
            },
            "required": ["orderID"]
          }
        ],
        "type": "object"
      },
      "orders": {
        "title": "Orders partial",
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "integer"
          },
          "cartID": {
            "type": "string"
          },
          "shippingMethod": {
            "type": "string"
          },
          "trackingCode": {
            "type": "string"
          },
          "courierTitle": {
            "type": "string"
          },
          "courierUrl": {
            "type": "string",
            "format": "uri"
          },
          "orderUrl": {
            "type": "string",
            "format": "uri"
          },
          "source": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "discountCode": {
            "type": "string"
          },
          "discountValue": {
            "type": "integer"
          },
          "discountType": {
            "type": "string",
            "description": "Can be `percentage`, `fixedAmount` or `freeShippping`"
          },
          "currency": {
            "type": "string",
            "description": "Currency ISO code",
            "minLength": 3,
            "maxLength": 3
          },
          "orderSum": {
            "type": "integer",
            "description": "In cents"
          },
          "subTotalSum": {
            "type": "integer",
            "description": "In cents"
          },
          "subTotalTaxIncluded": {
            "type": "boolean",
            "description": "Whether subTotalSum includes taxes"
          },
          "discountSum": {
            "type": "integer",
            "description": "In cents"
          },
          "taxSum": {
            "type": "integer",
            "description": "In cents"
          },
          "shippingSum": {
            "type": "integer",
            "description": "In cents"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Order creation date. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Order update date. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          },
          "canceledDate": {
            "type": "string",
            "format": "date-time",
            "description": "[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          },
          "cancelReason": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Please view description for available statuses. You need to map your status with our statuses."
          },
          "fulfillmentStatus": {
            "type": "string",
            "description": "Please view description for available statuses. You need to map your status with our statuses."
          },
          "contactNote": {
            "type": "string"
          }
        },
        "required": ["currency", "orderSum", "createdAt"]
      },
      "campaign-full": {
        "title": "Campaign full",
        "allOf": [
          {
            "$ref": "#/components/schemas/campaign-partial"
          },
          {
            "type": "object",
            "properties": {
              "abTestWinner": {
                "description": "Available for `abtest` type campaigns. 'Winner' information",
                "type": "object",
                "properties": {
                  "fromName": {
                    "type": "string"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "sent": {
                    "type": "integer",
                    "description": "Sent emails count"
                  },
                  "clicked": {
                    "type": "integer",
                    "description": "Clicked links in emails count"
                  },
                  "bounced": {
                    "type": "integer",
                    "description": "Bounced emails count"
                  },
                  "complained": {
                    "type": "integer",
                    "description": "Complaints count"
                  },
                  "opened": {
                    "type": "integer",
                    "description": "Opened emails count"
                  },
                  "unsubscribed": {
                    "type": "integer",
                    "description": "Unsubscribed contacts count"
                  }
                }
              },
              "abTest": {
                "type": "array",
                "description": "Available for `abtest` type campaigns",
                "items": {
                  "type": "object",
                  "description": "Available for `abtest` type campaigns",
                  "properties": {
                    "winner": {
                      "type": "boolean",
                      "description": ""
                    },
                    "fromName": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "sent": {
                      "type": "integer",
                      "description": "Sent emails count"
                    },
                    "clicked": {
                      "type": "integer",
                      "description": "Clicked links in emails count"
                    },
                    "bounced": {
                      "type": "integer",
                      "description": "Bounced emails count"
                    },
                    "complained": {
                      "type": "integer",
                      "description": "Complaints count"
                    },
                    "opened": {
                      "type": "integer",
                      "description": "Opened emails count"
                    },
                    "unsubscribed": {
                      "type": "integer",
                      "description": "Unsubscribed contacts count"
                    }
                  }
                }
              },
              "byDevices": {
                "type": "object",
                "properties": {
                  "opened": {
                    "type": "object",
                    "properties": {
                      "mobile": {
                        "type": "integer"
                      },
                      "desktop": {
                        "type": "integer"
                      },
                      "tablet": {
                        "type": "integer"
                      }
                    }
                  },
                  "clicked": {
                    "type": "object",
                    "properties": {
                      "mobile": {
                        "type": "integer"
                      },
                      "desktop": {
                        "type": "integer"
                      },
                      "tablet": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "campaign-partial": {
        "title": "Campaign partial",
        "type": "object",
        "properties": {
          "campaignID": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "See `campaigns` method description for available statuses."
          },
          "type": {
            "type": "string",
            "description": "See `campaigns` method description for available types."
          },
          "fromName": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "sent": {
            "type": "integer",
            "description": "Sent emails count"
          },
          "opened": {
            "type": "integer",
            "description": "Opened emails count"
          },
          "clicked": {
            "type": "integer",
            "description": "Clicked links in emails count"
          },
          "bounced": {
            "type": "integer",
            "description": "Bounced emails count"
          },
          "complained": {
            "type": "integer",
            "description": "Complaints count"
          },
          "unsubscribed": {
            "type": "integer",
            "description": "Unsubscribed contacts count"
          },
          "allSubscribers": {
            "type": "boolean",
            "description": "If true - lists and segments will be empty - campaign sent to all subscribers"
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "segmentID": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": ["campaignID", "status", "type"],
        "example": {
          "campaignID": "proident qui irure",
          "status": "et Excepteur adipisicing esse",
          "type": "ad tempor dolore",
          "fromName": "aute reprehenderit eiusmod magna consequat",
          "subject": "sed nostrud",
          "creationDate": "3743-04-26T13:48:47.020Z",
          "startDate": "4907-07-17T09:51:26.093Z",
          "endDate": "3524-01-05T23:55:19.474Z",
          "sent": -13858398,
          "clicked": -44343952,
          "bounced": -69456907,
          "comlained": -23298758,
          "opened": 40832034,
          "unsubscribed": -22007960,
          "segments": [
            {},
            {
              "segmentID": "sunt ut labore"
            },
            {
              "segmentID": "sunt ad dolor"
            },
            {}
          ]
        }
      },
      "cart-model": {
        "title": "Cart model",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          },
          "currency": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "description": "ISO currency code"
          },
          "cartSum": {
            "type": "integer",
            "description": "In cents, without commas, etc. For example for 1.25 USD - 125"
          },
          "cartRecoveryUrl": {
            "type": "string",
            "format": "uri"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cartProductID": {
                  "type": "string",
                  "description": "Product identificator in cart"
                },
                "productID": {
                  "type": "string"
                },
                "variantID": {
                  "type": "string",
                  "description": "Product modification identificator"
                },
                "sku": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Only whole number.",
                  "minimum": 1
                },
                "price": {
                  "type": "integer",
                  "description": "Final price in cents (with discount, with taxes, etc.), without commas, etc. For example for 1.25 USD - 125. ",
                  "minimum": 0
                },
                "oldPrice": {
                  "type": "integer",
                  "description": "old product price in cents (with discount, with taxes, etc.), without commas, etc. For example for 1.50 USD - 150. ",
                  "minimum": 0
                },
                "discount": {
                  "type": "integer",
                  "description": "Discount sum in cents."
                },
                "imageUrl": {
                  "type": "string",
                  "format": "uri",
                  "description": "Link to product image"
                },
                "productUrl": {
                  "type": "string",
                  "description": "Link to product page",
                  "format": "uri"
                }
              },
              "required": [
                "cartProductID",
                "productID",
                "variantID",
                "title",
                "quantity",
                "price"
              ]
            }
          }
        },
        "required": ["currency", "cartSum"]
      },
      "consent-model": {
        "type": "object",
        "description": "Legal contact consent information",
        "properties": {
          "source": {
            "type": "string",
            "description": "Value of source where user provided consent"
          },
          "createdAt": {
            "format": "date-time",
            "description": "Date of when consent was provided"
          },
          "ip": {
            "type": "string",
            "description": "IP address of user"
          },
          "userAgent": {
            "type": "string",
            "description": "User agent of user"
          }
        }
      },
      "cart-model-full": {
        "title": "Cart model - full",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "cartID": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "phone": {
                "type": "string"
              },
              "contactID": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
              }
            },
            "required": ["cartID"]
          },
          {
            "$ref": "#/components/schemas/cart-model"
          }
        ]
      },
      "return-id": {
        "title": "Return ID - input",
        "type": "object",
        "properties": {
          "returnID": {
            "type": "boolean",
            "default": false,
            "description": "Make operation synchronous and get back contactID"
          }
        }
      },
      "category-partial": {
        "title": "Category partial",
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Update date. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          }
        },
        "required": ["title"]
      },
      "category-output": {
        "title": "Category output",
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Update date. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. (example: 2017-05-30T14:11:12Z)"
          }
        }
      },
      "paging-cursor": {
        "title": "Paging cursor",
        "type": "object",
        "properties": {
          "previous": {
            "type": "string",
            "description": "Link to previous page results",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "description": "Link to next page results",
            "format": "uri"
          },
          "limit": {
            "type": "integer",
            "default": 100,
            "minimum": 1,
            "maximum": 250,
            "description": "Default - 100. Max - 250."
          }
        }
      },
      "segments-output": {
        "title": "Segments output",
        "type": "object",
        "properties": {
          "segmentID": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "memberCount": {
            "type": "integer",
            "minimum": 0
          },
          "creationDate": {
            "type": "string",
            "format": "date"
          }
        },
        "required": ["segmentID", "name", "memberCount", "creationDate"],
        "example": {
          "segmentID": "pariatur cupi",
          "name": "Duis",
          "description": "cillum pariatur voluptate sit",
          "memberCount": 88846055,
          "creationDate": "2008-02-19"
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  },
  "_id": "635bb5bf654eb600ab4872ca"
}
